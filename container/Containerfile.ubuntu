FROM docker.io/library/node:16.18.0-bullseye-slim as node-donor

FROM mcr.microsoft.com/dotnet/sdk:6.0.402-jammy

COPY --from=node-donor /usr/local /usr/local

# Prepare Ubuntu build environment
RUN CODENAME="$(lsb_release -c -s)" \
    # Add ARM64 package ports list
    && echo "deb [arch=arm64] http://ports.ubuntu.com/ ${CODENAME} main restricted universe multiverse" >>/etc/apt/sources.list.d/arm64.list \
    && echo "deb [arch=arm64] http://ports.ubuntu.com/ ${CODENAME}-updates main restricted universe multiverse" >>/etc/apt/sources.list.d/arm64.list \
    && echo "deb [arch=arm64] http://ports.ubuntu.com/ ${CODENAME}-backports main restricted universe multiverse" >>/etc/apt/sources.list.d/arm64.list \
    && echo "deb [arch=arm64] http://ports.ubuntu.com/ ${CODENAME}-security main restricted universe multiverse" >>/etc/apt/sources.list.d/arm64.list \
    # Add ARMHF package ports list
    && echo "deb [arch=armhf] http://ports.ubuntu.com/ ${CODENAME} main restricted universe multiverse" >>/etc/apt/sources.list.d/armhf.list \
    && echo "deb [arch=armhf] http://ports.ubuntu.com/ ${CODENAME}-updates main restricted universe multiverse" >>/etc/apt/sources.list.d/armhf.list \
    && echo "deb [arch=armhf] http://ports.ubuntu.com/ ${CODENAME}-backports main restricted universe multiverse" >>/etc/apt/sources.list.d/armhf.list \
    && echo "deb [arch=armhf] http://ports.ubuntu.com/ ${CODENAME}-security main restricted universe multiverse" >>/etc/apt/sources.list.d/armhf.list \
    \
    && dpkg --add-architecture arm64 \
    && dpkg --add-architecture armhf \
    && apt-get update -qqy \
    && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -qqy \
      bash \
      build-essential \
      ca-certificates \
      crossbuild-essential-arm64 \
      crossbuild-essential-armhf \
      curl \
      debhelper \
      devscripts \
      dh-make \
      git \
      gnupg \
      libcurl4-openssl-dev \
      libfontconfig1-dev \
      libfreetype6-dev \
      liblttng-ust1 \
      libssl-dev \
      mmv \
    && rm -rf /var/lib/apt/lists/* \
    # Smoke Tests
    && set -ex || exit $?; \
      dotnet --version; \
      node --version; \
      npm --version;
