name: "ðŸ“¦ Build Server Package"

on:
  workflow_dispatch:

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  gatherFacts:
    runs-on: ubuntu-22.04
    outputs:
      appRepo: ${{ steps.variables.outputs.APP_REPO }}
      appGitSha: ${{ steps.variables.outputs.APP_GIT_SHA }}
      appVersion: ${{ steps.variables.outputs.APP_VERSION }}
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v3

      - name: "Gather Variables"
        id: variables
        run: |-
          set -exu

          echo "APP_REPO=$(yq --exit-status '.repository' server/metaValues.yaml)" >> ${GITHUB_OUTPUT}
          echo "APP_VERSION=$(yq --exit-status '.version' server/metaValues.yaml)" >> ${GITHUB_OUTPUT}
          echo "APP_GIT_SHA=$(yq --exit-status '.git_sha' server/metaValues.yaml)" >> ${GITHUB_OUTPUT}

  buildDeb:
    needs:
      - gatherFacts
    runs-on: ubuntu-22.04
    container:
      image: ghcr.io/${{ github.repository_owner }}/jellyfin-deb-builder:${{ matrix.OS }}-20221113
      env:
        DEB_BUILD_OPTIONS: noddebs
    strategy:
      fail-fast: false
      matrix:
        OS:
          - debian
          - ubuntu
        TARGET_ARCH:
          - amd64
          - arm64
          - armhf
    steps:
      - name: "Checkout DEB Repository"
        uses: actions/checkout@v3
        with:
          path: jellyfin-deb

      - name: "Checkout Code Repository"
        uses: actions/checkout@v3
        with:
          repository: ${{ needs.gatherFacts.outputs.appRepo }}
          ref: ${{ needs.gatherFacts.outputs.appGitSha }}
          path: jellyfin-code

      - name: "Copy debian Folder"
        run: cp -r jellyfin-deb/server/* jellyfin-code

      - name: "Build DEB"
        run: bash jellyfin-code/buildDebInContainer.sh "${{ matrix.TARGET_ARCH }}"

      - name: "Publish Validation Artifact"
        uses: actions/upload-artifact@v3
        with:
          name: server-deb_${{ matrix.OS }}-${{ matrix.TARGET_ARCH }}
          path: out
          if-no-files-found: error

  publishDeb:
    needs:
      - gatherFacts
      - buildDeb
    if: ${{ ! contains(needs.gatherFacts.outputs.appVersion, 'unstable') }}
    runs-on: ubuntu-22.04
    steps:
      - name: "Download Artifacts"
        uses: actions/download-artifact@v3

      - name: "Debug"
        run: ls -la
